<UserControl x:Name="PickGroupForScheduleViev" x:Class="SandS.View.PickGroupForSchedule"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SandS.View"
             mc:Ignorable="d" Width="728" Height="450"
            xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm" xmlns:viewmodel="clr-namespace:SandS.ViewModel" d:DataContext="{d:DesignInstance Type=viewmodel:PickGroupForScheduleVM}"
             TextElement.Foreground="{DynamicResource MaterialDesignBody}"
            TextElement.FontWeight="Regular"
            TextElement.FontSize="13"
            TextOptions.TextFormattingMode="Ideal"
            TextOptions.TextRenderingMode="Auto"
            Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"
             >
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </UserControl.Resources>
    
    <dxmvvm:Interaction.Behaviors >
        <dxmvvm:EventToCommand EventName="Loaded" Command="{Binding LoadedCommand}" ProcessEventsFromDisabledEventOwner="False"/>
    </dxmvvm:Interaction.Behaviors>
    <Grid>
        <ProgressBar
                    Visibility="{Binding Loading, Converter={StaticResource BooleanToVisibilityConverter}}"
  Style="{StaticResource MaterialDesignCircularProgressBar}"
  Value="35"
  IsIndeterminate="True" Margin="170,79,174,187" RenderTransformOrigin="0.737,0.676" Grid.Column="1" Grid.Row="1" />
        <materialDesign:Transitioner SelectedIndex="{Binding transitioner}"  AutoApplyTransitionOrigins="True">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="80*"/>
                    <RowDefinition Height="281*"/>
                    <RowDefinition Height="80*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>
                <ComboBox x:Name="DepartmentCombobox"
                          SelectedItem="{Binding SelectedDepartment}"
            DisplayMemberPath="Name" SelectedValuePath="IdDepartment"
            ItemsSource="{Binding Departments.Result}"
            Style="{StaticResource MaterialDesignOutlinedComboBox}"
            materialDesign:HintAssist.Hint="Выберите отделение"
            materialDesign:TextFieldAssist.HasClearButton="True" Grid.Column="1" VerticalAlignment="Top" Grid.Row="1" Margin="10,9,10,0" Height="49">
                    <dxmvvm:Interaction.Behaviors>
                        <dxmvvm:EventToCommand EventName="SelectionChanged" Command="{Binding DepartmentsSelectedChangedCommand}" ProcessEventsFromDisabledEventOwner="False"/>
                    </dxmvvm:Interaction.Behaviors>
                </ComboBox>
                <ComboBox
            x:Name="GroupCombobox"
            DisplayMemberPath="Name" SelectedValuePath="IdGroup"
                    ItemsSource="{Binding Groups.Result}"
                    IsEnabled="{Binding GroupsIsEndable}"
                    SelectedItem="{Binding SelectedGroup}"
            Style="{StaticResource MaterialDesignOutlinedComboBox}"
            materialDesign:HintAssist.Hint="Выберите группу"
            materialDesign:TextFieldAssist.HasClearButton="True" Grid.Column="1" VerticalAlignment="Top" Grid.Row="1" Margin="10,112.4,10,0" Height="49">
                    <dxmvvm:Interaction.Behaviors>
                        <dxmvvm:EventToCommand EventName="SelectionChanged" Command="{Binding GroupsSelectedChangedCommand}" ProcessEventsFromDisabledEventOwner="False"/>
                    </dxmvvm:Interaction.Behaviors>
                </ComboBox>
                <Button IsEnabled="{Binding ShowTtableButtonIsEnable}" x:Name="ShowButton" Command="{Binding ShowTtableCommand}" Content="Показать" Grid.Column="1" Height="43" Margin="10,0,10,7.8" VerticalAlignment="Bottom" Grid.Row="1"/>
            </Grid>
            <materialDesign:TransitionerSlide Content="{Binding ShowttableUk}" OpeningEffect="{materialDesign:TransitionEffect FadeIn}">
                <materialDesign:TransitionerSlide.BackwardWipe>
                    <materialDesign:CircleWipe/>
                </materialDesign:TransitionerSlide.BackwardWipe>
                <materialDesign:TransitionerSlide.ForwardWipe>
                    <materialDesign:CircleWipe/>
                </materialDesign:TransitionerSlide.ForwardWipe>
            </materialDesign:TransitionerSlide>
        </materialDesign:Transitioner>
    </Grid>
</UserControl>
